import org.jetbrains.kotlin.gradle.dsl.jvm.JvmTargetValidationMode
import org.jetbrains.kotlin.gradle.tasks.KotlinJvmCompile

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.9.22'
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id 'maven-publish'
    id 'org.jetbrains.dokka' version '1.9.20'
    id 'net.minecrell.plugin-yml.paper' version '0.6.0'
}

group = 'de.staticred.kia'
version = '1.0.34'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "CodeMC"
        url = uri("https://repo.codemc.io/repository/maven-public/")
    }
}

paper {
    name = "KIA - Kotlin Inventory API"
    main = "de.staticred.kia.KIA"
    apiVersion = "1.20"
    version = rootProject.version.toString()
    author = "StaticRed / StaticFX"
    website = "https://github.com/StaticFX/KIA"
}

subprojects {
    apply plugin: 'org.jetbrains.dokka'
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT"
    shadow "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "de.tr7zw:item-nbt-api:2.12.2"
}

java {
    withSourcesJar()
    withJavadocJar()
}

javadoc {
}

def generatedVersionDir = "${buildDir}/generated-version"

sourceSets {
    main {
        output.dir(generatedVersionDir, builtBy: 'generateVersionProperties')
    }
}

tasks.register('generateVersionProperties') {
    doLast {
        def propertiesFile = file "$generatedVersionDir/version.properties"
        propertiesFile.parentFile.mkdirs()
        def properties = new Properties()
        properties.setProperty("version", rootProject.version.toString())
        propertiesFile.withWriter { properties.store(it, null) }
    }
}
processResources.dependsOn generateVersionProperties

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/StaticFX/KIA"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }

    publications {
        github(MavenPublication) {
            from components.java
            artifactId = 'kia'
        }
    }
}

shadowJar {
    relocate("de.tr7zw.changeme.nbtapi", "de.staticred.kia.nbtapi")
}

build {
    dependsOn(shadowJar)
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

tasks.withType(KotlinJvmCompile.class).configureEach {
    jvmTargetValidationMode = JvmTargetValidationMode.WARNING
}

sourceSets {
    main.kotlin.srcDirs += 'src/main/kotlin'
}


processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('paper-plugin.yml') {
        expand props
    }
}

kotlin {
    jvmToolchain(17)
}
